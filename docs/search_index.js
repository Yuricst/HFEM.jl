var documenterSearchIndex = {"docs":
[{"location":"tutorials/jacobians_hessians.html#Jacobians-and-Hessians","page":"Jacobians & Hessians","title":"Jacobians & Hessians","text":"","category":"section"},{"location":"tutorials/jacobians_hessians.html","page":"Jacobians & Hessians","title":"Jacobians & Hessians","text":"When designing certain algorithms (e.g. differential correction, nonlinear programming solvers, DDP, etc.), it may be necessary to evaluate the Jacobian or Hessian of the dynamics at a given state boldsymbolx and time t.","category":"page"},{"location":"tutorials/jacobians_hessians.html","page":"Jacobians & Hessians","title":"Jacobians & Hessians","text":"note: Note\nIn anticipation of such algorithms also having controls boldsymbolu as inputs, the functions eom_jacobian_fd and eom_hessian_fd take as input u, a place-holder argument for control, as input. For dynamics that do not contain control (e.g. HighFidelityEphemerisModel.eom_Nbody(or NbodySH)_SPICE(or Interp)), you just need to pass anything (e.g. 0.0, nothing, etc.).","category":"page"},{"location":"tutorials/jacobians_hessians.html","page":"Jacobians & Hessians","title":"Jacobians & Hessians","text":"We begin by defining the parameters object (same setup as when we solve an IVP): ","category":"page"},{"location":"tutorials/jacobians_hessians.html","page":"Jacobians & Hessians","title":"Jacobians & Hessians","text":"using SPICE\nusing HighFidelityEphemerisModel\n\n# load SPICE kernels\nspice_dir = ENV[\"SPICE\"]\nfurnsh(joinpath(spice_dir, \"lsk\", \"naif0012.tls\"))\nfurnsh(joinpath(spice_dir, \"spk\", \"de440.bsp\"))\nfurnsh(joinpath(spice_dir, \"pck\", \"gm_de440.tpc\"))\nfurnsh(joinpath(spice_dir, \"pck\", \"moon_pa_de440_200625.bpc\"))\nfurnsh(joinpath(spice_dir, \"fk\", \"moon_de440_250416.tf\"))\n\n# define parameters as usual\ndefine parameters\nnaif_ids = [\"301\", \"399\", \"10\"]\nGMs = [bodvrd(ID, \"GM\", 1)[1] for ID in naif_ids]\nnaif_frame = \"J2000\"\nabcorr = \"NONE\"\nDU = 3000.0\nfilepath_spherical_harmonics = joinpath(@__DIR__, \"../data/luna/gggrx_1200l_sha_20x20.tab\")\nnmax = 4\n\net0 = str2et(\"2020-01-01T00:00:00\")\netf = et0 + 30 * 86400.0\ninterpolate_ephem_span = [et0, etf]\ninterpolation_time_step = 30.0\nparameters = HighFidelityEphemerisModel.HighFidelityEphemerisModelParameters(\n    et0, DU, GMs, naif_ids, naif_frame, abcorr;\n    interpolate_ephem_span=interpolate_ephem_span,\n    filepath_spherical_harmonics = filepath_spherical_harmonics,\n    nmax = nmax,\n    frame_PCPF = \"MOON_PA\",\n    interpolation_time_step = interpolation_time_step,\n)","category":"page"},{"location":"tutorials/jacobians_hessians.html","page":"Jacobians & Hessians","title":"Jacobians & Hessians","text":"Now we can call eom_jacobian_fd to get the 6-by-6 Jacobian, or eom_hessian_fd to get the 6-by-6-by-6 Hessian.","category":"page"},{"location":"tutorials/jacobians_hessians.html","page":"Jacobians & Hessians","title":"Jacobians & Hessians","text":"# evaluate Jacobian & Hessian\nx0 = [1.0, 0.0, 0.3, 0.5, 1.0, 0.0]     # state when we want to evaluate Jacobian/Hessian, in canonical scales\nt = 5.1                                 # time when we want to evaluate Jacobian/Hessian, in canonical time\n\njac_fd = HighFidelityEphemerisModel.eom_jacobian_fd(\n    HighFidelityEphemerisModel.eom_Nbody_Interp,      # this can be some other static equations of motion\n    x0,\n    0.0,                                              # place-holder for control argument\n    parameters,\n    t\n)\n\nhess_fd = HighFidelityEphemerisModel.eom_hessian_fd(\n    HighFidelityEphemerisModel.eom_Nbody_Interp,      # this can be some other static equations of motion\n    x0,\n    0.0,                                              # place-holder for control argument\n    parameters,\n    t\n)","category":"page"},{"location":"tutorials/jacobians_hessians.html","page":"Jacobians & Hessians","title":"Jacobians & Hessians","text":"warning: Warning\nThe first argument to either eom_jacobian_fd or eom_hessian_fd is expected to be in allocating form, i.e. of the form function lorenz(u, p, t)\n    dx = 10.0 * (u[2] - u[1])\n    dy = u[1] * (28.0 - u[3]) - u[2]\n    dz = u[1] * u[2] - (8 / 3) * u[3]\n    return [dx, dy, dz]\nendinstead of function lorenz!(du, u, p, t)\n    du[1] = 10.0 * (u[2] - u[1])\n    du[2] = u[1] * (28.0 - u[3]) - u[2]\n    du[3] = u[1] * u[2] - (8 / 3) * u[3]\n    return nothing\nend(c.f. docs from DifferentialEquations.jl). If using an eom function from HighFidelityEphemerisModel, as per convention, make sure to use equations of motion without the ! at the end of the name.","category":"page"},{"location":"api.html#Core-routines","page":"API","title":"Core routines","text":"","category":"section"},{"location":"api.html#Parameters-and-Interpolations","page":"API","title":"Parameters & Interpolations","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Modules = [HighFidelityEphemerisModel]\nOrder   = [:function, :type, :struct]\nPages   = [\n  \"parameters.jl\",\n  \"ephemeris_interpolation.jl\",\n  \"transformation_interpolation.jl\",\n]","category":"page"},{"location":"api.html#Main.HighFidelityEphemerisModel.HighFidelityEphemerisModelParameters","page":"API","title":"Main.HighFidelityEphemerisModel.HighFidelityEphemerisModelParameters","text":"Construct HighFidelityEphemerisModelParameters struct.\n\nArguments\n\net0::Float64: reference epoch in seconds past J2000\nDU::Real: canonical distance unit\nGMs::Vector{Float64}: gravitational constants of the bodies, in km^3/s^2\nnaif_ids::Vector{String}: NAIF IDs of the bodies\nnaif_frame::String: inertial frame in which dynamics is integrated\nabcorr::String: aberration correction for querying ephemerides of third bodies\nfilepath_spherical_harmonics::Union{Nothing,String}: path to spherical harmonics data file\nnmax::Int: maximum degree of spherical harmonics to be included\nframe_PCPF::Union{Nothing,String}: NAIF frame of planet-centered planet-fixed frame\nget_jacobian_func::Bool: whether to construct symbolic Jacobian function (only for Nbody dynamics)\ninterpolate_ephem_span::Union{Nothing,Vector{Float64}}: span of epochs to interpolate ephemerides\ninterpolation_time_step::Real: time step for interpolation\ninclude_srp::Bool: whether to include SRP terms\nsrp_Cr::Float64: SRP radiation pressure coefficient\nsrp_Am::Float64: SRP area-to-mass ratio in m^2/kg\nsrp_P0::Float64: SRP power in W\n\n\n\n\n\n","category":"type"},{"location":"api.html#Base.show-Tuple{IO, Main.HighFidelityEphemerisModel.InterpolatedEphemeris}","page":"API","title":"Base.show","text":"Overload method for showing InterpolatedEphemeris\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.get_pos-Tuple{Main.HighFidelityEphemerisModel.InterpolatedEphemeris, Float64}","page":"API","title":"Main.HighFidelityEphemerisModel.get_pos","text":"Interpolate ephemeris position at a given epoch\n\nArguments\n\nephem::InterpolatedEphemeris: interpolated ephemeris struct\net::Float64: epoch to interpolate\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.get_state-Tuple{Main.HighFidelityEphemerisModel.InterpolatedEphemeris, Float64}","page":"API","title":"Main.HighFidelityEphemerisModel.get_state","text":"Interpolate ephemeris state at a given epoch\n\nArguments\n\nephem::InterpolatedEphemeris: interpolated ephemeris struct\net::Float64: epoch to interpolate\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.InterpolatedEphemeris","page":"API","title":"Main.HighFidelityEphemerisModel.InterpolatedEphemeris","text":"InterpolatedEphemeris struct\n\nFields\n\nnaif_id::String: NAIF ID of the body\net_range::Tuple{Float64, Float64}: span of epochs to interpolate\nsplines::Array{Spline1D, 1}: splines for the interpolated ephemeris\nrescale_epoch::Bool: whether to rescale the epoch to the canonical time unit\ntstar::Float64: canonical time unit\n\nArguments\n\nnaif_id::String: NAIF ID of the body\nets::Vector{Float64}: epochs to interpolate\nrvs::Array{Float64, 2}: position and velocity vectors of the body, in km and km/s\nrescale_epoch::Bool: whether to rescale the epoch to the canonical time unit\ntstar::Float64: canonical time unit\nspline_order::Int: order of the spline\n\n\n\n\n\n","category":"type"},{"location":"api.html#Base.show-Tuple{IO, Main.HighFidelityEphemerisModel.InterpolatedTransformation}","page":"API","title":"Base.show","text":"Overload method for showing InterpolatedTransformation\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.get_euler_angles-Tuple{Main.HighFidelityEphemerisModel.InterpolatedTransformation, Float64}","page":"API","title":"Main.HighFidelityEphemerisModel.get_euler_angles","text":"Interpolate Euler angles at a given epoch\n\nArguments\n\ntransformation::InterpolatedTransformation: interpolated transformation struct\net::Float64: epoch to interpolate\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.pxform-Tuple{Main.HighFidelityEphemerisModel.InterpolatedTransformation, Float64}","page":"API","title":"Main.HighFidelityEphemerisModel.pxform","text":"Interpolate transformation matrix at a given epoch\n\nArguments\n\ntransformation::InterpolatedTransformation: interpolated transformation struct\net::Float64: epoch to interpolate\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.InterpolatedTransformation","page":"API","title":"Main.HighFidelityEphemerisModel.InterpolatedTransformation","text":"InterpolatedTransformation struct\n\nFields\n\net_range::Tuple{Float64, Float64}: span of epochs to interpolate\nframe_from::String: frame from which the transformation is computed\nframe_to::String: frame to which the transformation is computed\naxis_sequence::Tuple{Int, Int, Int}: sequence of axes for the Euler angles\nsplines::Array{Spline1D, 1}: splines for the interpolated transformation\nrescale_epoch::Bool: whether to rescale the epoch to the canonical time unit\nTU::Float64: canonical time unit\n\nArguments\n\nets::Vector{Float64}: epochs to interpolate\nframe_from::String: frame from which the transformation is computed\nframe_to::String: frame to which the transformation is computed\nrescale_epoch::Bool: whether to rescale the epoch to the canonical time unit\nTU::Float64: canonical time unit\nspline_order::Int: order of the spline\n\n\n\n\n\n","category":"type"},{"location":"api.html#Equations-of-motion","page":"API","title":"Equations of motion","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Modules = [HighFidelityEphemerisModel]\nOrder   = [:function, :type]\nPages   = [\n  \"eoms/eom_Nbody_Interp.jl\",\n  \"eoms/eom_Nbody_SPICE.jl\",\n  \"eoms/eom_NbodySH_Interp.jl\",\n  \"eoms/eom_NbodySH_SPICE.jl\"\n]","category":"page"},{"location":"api.html#Main.HighFidelityEphemerisModel.dfdx_Nbody_Interp-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.dfdx_Nbody_Interp","text":"dfdx_Nbody_Interp(x, u, params, t)\n\nEvaluate Jacobian of N-body problem\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_Nbody_Interp!-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_Nbody_Interp!","text":"eom_Nbody_Interp!(dx, x, params, t)\n\nRight-hand side of N-body equations of motion compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_Nbody_Interp-Tuple{Any, Any, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_Nbody_Interp","text":"eom_Nbody_Interp(x, params, t)\n\nRight-hand side of N-body equations of motion compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_stm_Nbody_Interp!-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_stm_Nbody_Interp!","text":"eom_stm_Nbody_Interp!(dx_stm, x_stm, params, t)\n\nRight-hand side of N-body equations of motion with STM compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_stm_Nbody_Interp_fd!-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_stm_Nbody_Interp_fd!","text":"eom_stm_Nbody_Interp_fd!(dx_stm, x_stm, params, t)\n\nRight-hand side of N-body equations of motion with STM compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.dfdx_Nbody_SPICE-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.dfdx_Nbody_SPICE","text":"dfdx_Nbody_SPICE(x, u, params, t)\n\nEvaluate Jacobian of N-body problem\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_Nbody_SPICE!-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_Nbody_SPICE!","text":"eom_Nbody_SPICE!(dx, x, params, t)\n\nRight-hand side of N-body equations of motion compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_Nbody_SPICE-Tuple{Any, Any, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_Nbody_SPICE","text":"eom_Nbody_SPICE(x, params, t)\n\nRight-hand side of N-body equations of motion compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_stm_Nbody_SPICE!-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_stm_Nbody_SPICE!","text":"eom_stm_Nbody_SPICE!(dx_stm, x_stm, params, t)\n\nRight-hand side of N-body equations of motion with STMcompatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_stm_Nbody_SPICE_fd!-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_stm_Nbody_SPICE_fd!","text":"eom_stm_Nbody_SPICE_fd!(dx_stm, x_stm, params, t)\n\nRight-hand side of N-body equations of motion with STM compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.dfdx_NbodySH_Interp_fd-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.dfdx_NbodySH_Interp_fd","text":"dfdx_NbodySH_Interp_fd(x, u, params, t)\n\nEvaluate Jacobian of N-body problem\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_NbodySH_Interp!-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_NbodySH_Interp!","text":"eom_NbodySH_Interp!(dx, x, params, t)\n\nRight-hand side of N-body equations of motion compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_NbodySH_Interp-Tuple{Any, Any, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_NbodySH_Interp","text":"eom_NbodySH_Interp(x, params, t)\n\nRight-hand side of N-body equations of motion compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_stm_NbodySH_Interp_fd!-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_stm_NbodySH_Interp_fd!","text":"eom_stm_NbodySH_Interp_fd!(dx_stm, x_stm, params, t)\n\nRight-hand side of N-body equations of motion with STM compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_NbodySH_SPICE!-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_NbodySH_SPICE!","text":"eom_NbodySH_SPICE!(dx, x, params, t)\n\nRight-hand side of N-body equations of motion compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_NbodySH_SPICE-Tuple{Any, Any, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_NbodySH_SPICE","text":"eom_NbodySH_SPICE(x, params, t)\n\nRight-hand side of N-body equations of motion compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_stm_NbodySH_SPICE_fd!-NTuple{4, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_stm_NbodySH_SPICE_fd!","text":"eom_stm_NbodySH_SPICE_fd!(dx_stm, x_stm, params, t)\n\nRight-hand side of N-body equations of motion with STM compatible with DifferentialEquations.jl\n\n\n\n\n\n","category":"method"},{"location":"api.html#Jacobians-and-Hessians","page":"API","title":"Jacobians & Hessians","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Modules = [HighFidelityEphemerisModel]\nOrder   = [:function, :type]\nPages   = [\n  \"utils.jl\"\n]","category":"page"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_hessian_fd-Tuple{Function, Vararg{Any, 4}}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_hessian_fd","text":"eom_hessian_fd(eom::Function, x, u, params, t)\n\nEvaluate Hessian of equations of motion using ForwardDiff. The second argument u is a place-holder for control input.\n\nArguments\n\neom: \"static\" equations of motion, with signature eom(x, params, t) –> dx\nx: State vector\nu: Control input\nparams: Parameters\nt: Time\n\nReturns\n\nhess: Hessian of the equations of motion\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.eom_jacobian_fd-Tuple{Function, Vararg{Any, 4}}","page":"API","title":"Main.HighFidelityEphemerisModel.eom_jacobian_fd","text":"eom_jacobian_fd(eom::Function, x, u, params, t)\n\nEvaluate Jacobian of equations of motion using ForwardDiff. The second argument u is a place-holder for control input.\n\nArguments\n\neom: \"static\" equations of motion, with signature eom(x, params, t) –> dx\nx: State vector\nu: Control input\nparams: Parameters\nt: Time\n\nReturns\n\njac: Jacobian of the equations of motion\n\n\n\n\n\n","category":"method"},{"location":"api.html#Perturbations","page":"API","title":"Perturbations","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Modules = [HighFidelityEphemerisModel]\nOrder   = [:function, :type]\nPages   = [\n  \"perturbations/spherical_harmonics.jl\",\n  \"perturbations/third_body.jl\", \n  \"perturbations/solar_radiation_pressure.jl\"\n]","category":"page"},{"location":"api.html#Main.HighFidelityEphemerisModel.get_VWnm-Tuple{Real, Real, Real, Real, Int64, Int64}","page":"API","title":"Main.HighFidelityEphemerisModel.get_VWnm","text":"Get multipliers into gravity potential c.f. Montenbruck & Gill pg.66 eqn (3.27)\n\nArguments\n\nphi::Real: latitude\nlambda::Real: longitude\nR::Real: radius of Earth\nr::Real: radius of spacecraft\nn::Int: degree\nm::Int: order\n\nReturns\n\nVnm::Real: Vnm component\nWnm::Real: Wnm component\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.legendre-Tuple{Int64, Int64, Real}","page":"API","title":"Main.HighFidelityEphemerisModel.legendre","text":"Compute Legendre function of degree n order m\n\nArguments\n\nn::Int: degree (must be >= m)\nm::Int: order \nt::Real: argument (cosine of latitude)\n\nReturns\n\nPnm::Real: Legendre function value\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.spherical_harmonics_accel_PCPF-Tuple{Vector, Dict, Dict, Real, Real, Int64}","page":"API","title":"Main.HighFidelityEphemerisModel.spherical_harmonics_accel_PCPF","text":"Get acceleration due to potential up to degree nmax in planet-centered planet-fixed frame\n\nArguments\n\nphi::Real: latitude\nlambda::Real: longitude\nCS::Matrix: coefficient matrix\nGM::Real: gravitational parameter\nR::Real: reference radius\nr::Real: radius of spacecraft\nnmax::Int: maximum degree\n\nReturns\n\naccel_PCPF::Vector{Real}: acceleration in planet-centered planet-fixed frame\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.spherical_harmonics_nm_accel_PCPF-Tuple{Real, Real, Real, Dict, Dict, Real, Real, Int64, Int64}","page":"API","title":"Main.HighFidelityEphemerisModel.spherical_harmonics_nm_accel_PCPF","text":"Get acceleration due to (n,m) potential in planet-centered planet-fixed frame c.f. Montenbruck & Gill pg.68 eqn (3.33)\n\nArguments\n\nphi::Real: latitude\nlambda::Real: longitude\nCnm_dict::Dict: dictionary of Cnm coefficients (de-normalized)\nSnm_dict::Dict: dictionary of Snm coefficients (de-normalized)\nGM::Real: gravitational parameter\nR::Real: reference radius\nr::Real: radius of spacecraft\nn::Int: degree\nm::Int: order\n\nReturns\n\naccel_PCPF::Vector{Real}: acceleration in planet-centered planet-fixed frame\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.third_body_accel-Tuple{Any, Any, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.third_body_accel","text":"third_body_accel(r_spacecraft, r_3body, mu_3body)\n\nCompute third-body acceleration via Battin's formula (eqn (8.60) ~ (8.62) in [1])\n\n[1] Battin, R. H. (1987). An introduction to the mathematics and methods of astrodynamics. American Institute of Aeronautics and Astronautics, Inc.\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.get_srp_cannonball_coefficient","page":"API","title":"Main.HighFidelityEphemerisModel.get_srp_cannonball_coefficient","text":"get_srp_cannonball_coefficient(srp_P0, srp_Cr, srp_Am, DU, TU; AU = 149.6e6)\n\nGet the cannonball coefficient in canonical units for solar radiation pressure.\n\nArguments\n\nDU: canonical distance unit, in km\nTU: canonical time unit, in s\nsrp_Cr: reflectivity coefficient, dimensionless\nsrp_Am: area-to-mass ratio in units of m^2/kg\nsrp_P0: solar radiation pressure at 1 AU, in units of N/m^2\nAU: Astronomical unit, in km\n\n\n\n\n\n","category":"function"},{"location":"api.html#Main.HighFidelityEphemerisModel.srp_cannonball-Union{Tuple{T}, Tuple{Vector{T}, Vector{Float64}, Float64}} where T","page":"API","title":"Main.HighFidelityEphemerisModel.srp_cannonball","text":"srp_cannonball(r, r_sun, k_srp_cannonball)\n\nCompute acceleration due to solar radiation pressure using the cannonball model.\n\nArguments\n\nr: position of the spacecraft, in km\nr_sun: position of the sun, in km\nk_srp_cannonball: cannonball coefficient in canonical units DU^3/TU^2\n\n\n\n\n\n","category":"method"},{"location":"api.html#Events","page":"API","title":"Events","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Modules = [HighFidelityEphemerisModel]\nOrder   = [:function, :type]\nPages   = [\n  \"events.jl\",\n]","category":"page"},{"location":"api.html#Main.HighFidelityEphemerisModel.angle_difference-Tuple{Real, Real}","page":"API","title":"Main.HighFidelityEphemerisModel.angle_difference","text":"angle_difference(ϕ_fwd::Real, ϕ_bck::Real)\n\nCompute angle difference for periodic angles between 0 and 2π\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.cart2trueanomaly-Tuple{Vector, Float64}","page":"API","title":"Main.HighFidelityEphemerisModel.cart2trueanomaly","text":"Compute osculating true anomaly from state and mu\n\nArguments\n\nstate::Vector: state vector in Cartesian coordinates, in order [x, y, z, vx, vy, vz]\nmu::Float64: gravitational parameter\nto2pi::Bool: if true, return the true anomaly in the range [0, 2π]\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.get_trueanomaly_event-Tuple{Real}","page":"API","title":"Main.HighFidelityEphemerisModel.get_trueanomaly_event","text":"Get event function to detect target osculating true anomaly\n\nArguments\n\nθ_target::Real: target osculating true anomaly\nt_bounds::Tuple{Real,Real}: time bounds\nradius_bounds::Tuple{Real,Real}: radius bounds\nθ_check_range::Float64: check range for true anomaly\n\nReturns:\n\n_condition: event function with signature (x, t, integrator) -> Union{Float64, NaN}\n\n\n\n\n\n","category":"method"},{"location":"api.html#Main.HighFidelityEphemerisModel.mod_custom-Tuple{Any, Any}","page":"API","title":"Main.HighFidelityEphemerisModel.mod_custom","text":"mod_custom(a, n)\n\nCustom modulo function Ref: https://stackoverflow.com/questions/1878907/how-can-i-find-the-difference-between-two-angles\n\n\n\n\n\n","category":"method"},{"location":"tutorials/basics.html#Basics","page":"Basics","title":"Basics","text":"","category":"section"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"We will now go over how to use the equations of motion to propagate some initial state until some future time, i.e. ","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"boldsymbolx(t_f)\n= \nboldsymbolx(t_0) + \nint_t_0^t_f boldsymbolf(x(t)t) mathrmdt","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"tip: Tip\nBefore we get started, make sure you have relevant SPICE kernels downloaded locally in your systme.  Most generic kernels are available on the JPL NAIF website: https://naif.jpl.nasa.gov/pub/naif/generic_kernels/.","category":"page"},{"location":"tutorials/basics.html#Initializing-parameters","page":"Basics","title":"Initializing parameters","text":"","category":"section"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"We first need to define the parameter struct to be parsed as argument to the equations of motion.","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"Below is the most general example compatible with eom_NbodySH_Interp!/eom_stm_NbodySH_Interp_fd!:","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"using OrdinaryDiffEq\nusing HighFidelityEphemerisModel\n\n# load SPICE kernels\nspice_dir = ENV[\"SPICE\"]\nfurnsh(joinpath(spice_dir, \"lsk\", \"naif0012.tls\"))\nfurnsh(joinpath(spice_dir, \"spk\", \"de440.bsp\"))\nfurnsh(joinpath(spice_dir, \"pck\", \"gm_de440.tpc\"))\nfurnsh(joinpath(spice_dir, \"pck\", \"moon_pa_de440_200625.bpc\"))\nfurnsh(joinpath(spice_dir, \"fk\", \"moon_de440_250416.tf\"))\n\nnaif_ids = [\"301\", \"399\", \"10\"]        # NAIF IDs of bodies to be included; first ID is of the central body\nGMs = [bodvrd(ID, \"GM\", 1)[1] for ID in naif_ids]      # in km^3/s^2\nnaif_frame = \"J2000\"\nabcorr = \"NONE\"\nDU = 1e5                               # canonical distance unit, in km\n\nnmax = 4                               # using up to 4-by-4 spherical harmonics\nfilepath_spherical_harmonics = \"HighFidelityEphemerisModel.jl/data/luna/gggrx_1200l_sha_20x20.tab\"\n\net0 = str2et(\"2026-01-05T00:00:00\")    # reference epoch\netf = et0 + 30 * 86400.0\ninterpolate_ephem_span = [et0, etf]    # range of epoch to interpolate ephemeris\ninterpolation_time_step = 1000.0       # time-step to sample ephemeris for interpolation\n\nparameters = HighFidelityEphemerisModel.HighFidelityEphemerisModelParameters(\n    et0, DU, GMs, naif_ids, naif_frame, abcorr;\n    interpolate_ephem_span=interpolate_ephem_span,\n    interpolation_time_step = interpolation_time_step,\n    filepath_spherical_harmonics = filepath_spherical_harmonics,\n    nmax = nmax,\n    frame_PCPF = \"MOON_PA\",\n    include_srp = true,\n    srp_Cr = 1.15,                     # SRP radiation pressure coefficient\n    srp_Am = 0.002,                    # SRP area-to-mass ratio in m^2/kg\n)","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"note: Note\nNAIF body IDs are defined according to: https://naif.jpl.nasa.gov/pub/naif/toolkitdocs/C/req/naifids.html\nif using _SPICE equations of motion, you do not need to provide interpolate_ephem_span and interpolation_time_step\nif using Nbody dynamics instead of NbodySH, you do not need to provide filepath_spherical_harmonics, nmax, and frame_PCPF\nif excluding SRP terms, set include_srp = false (then, srp_Cr and srp_Am won't be used, so they can be removed too)","category":"page"},{"location":"tutorials/basics.html#Solving-an-Initial-Value-Problem","page":"Basics","title":"Solving an Initial Value Problem","text":"","category":"section"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"The integration is done with the OrdinaryDiffEq.jl library (or equivalently with DifferentialEquations.jl).","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"# initial state (in canonical scale)\nx0 = [1.05, 0.0, 0.3, 0.5, 1.0, 0.0]\n\n# time span (in canonical scale)\ntspan = (0.0, 6 * 3600/parameters.TU)\n\n# solve with SPICE\nprob_spice = ODEProblem(HighFidelityEphemerisModel.eom_NbodySH_SPICE!, x0, tspan, parameters)\nsol_spice = solve(prob_spice, Vern8(), reltol=1e-14, abstol=1e-14)\n\n# ... or solve with interpolated ephemerides\nprob_interp = ODEProblem(HighFidelityEphemerisModel.eom_NbodySH_Interp!, x0, tspan, parameters)\nsol_interp = solve(prob_interp, Vern8(), reltol=1e-14, abstol=1e-14)","category":"page"},{"location":"tutorials/basics.html#Propagate-the-STM","page":"Basics","title":"Propagate the STM","text":"","category":"section"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"Suppose we now also want to integrate the STM, i.e. we want to also solve the Matrix-valued IVP","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"beginaligned\ndotboldsymbolPhi(tt_0) = dfracpartial boldsymbolfpartial boldsymbolx boldsymbolPhi(tt_0)\n\nboldsymbolPhi(t_0t_0) = boldsymbolI_6\nendaligned","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"Then, we just need to do","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"x0_stm = [x0; reshape(I(6),36)]  # initial augmented state, flattened\n\n# solve with SPICE\nprob_spice = ODEProblem(HighFidelityEphemerisModel.eom_stm_NbodySH_SPICE_fd!, x0_stm, tspan, parameters)\nsol_spice = solve(prob_spice, Vern8(), reltol=1e-14, abstol=1e-14)\n\n# ... or solve with interpolated ephemerides\nprob_interp = ODEProblem(HighFidelityEphemerisModel.eom_stm_NbodySH_Interp_fd!, x0_stm, tspan, parameters)\nsol_interp = solve(prob_interp, Vern8(), reltol=1e-14, abstol=1e-14)","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"Now, to extract the STM that maps from tspan[1] to tspan[2], ","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"x_aug_tf = sol_interp.u[end]            # final state + flattened STM\nx_tf   = x_aug_tf[1:6]                  # final state\nSTM_tf = reshape(x_aug_tf[7:42],6,6)'   # final STM; don't forget the transpose!","category":"page"},{"location":"tutorials/basics.html","page":"Basics","title":"Basics","text":"warning: Warning\nSince the STM is flattened in row-major within the equations of motion, while Julia is column-major, make sure to take the transpose after reshaping the flattened STM entries to (6,6)!","category":"page"},{"location":"overview.html#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"overview.html","page":"Overview","title":"Overview","text":"There are a number of equations of motion implemented in HighFidelityEphemerisModel.jl.","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"functions starting with eom_ integrates the translational state ([x,y,z,vx,vy,vz])\nfunctions starting with eom_stm_ integrates both the translational state and the flattened 6-by-6 STM.","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"note: Note\nThe STM is flattened row-wise, so to extract the state & STM from the ODESolution, make sure to reshape then tranapose; for example,x_stm_tf = sol.u[end]                       # concatenated state & STM (flattened)\nx_tf     = x_stm_tf[1:6]                    # final state [x,y,z,vx,vy,vz]\nSTM_tf   = reshape(sol.u[end][7:42],6,6)'   # final 6-by-6 STM","category":"page"},{"location":"overview.html#Dynamics-model","page":"Overview","title":"Dynamics model","text":"","category":"section"},{"location":"overview.html","page":"Overview","title":"Overview","text":"In HighFidelityEphemerisModel.jl, the dynamcis consists of the central gravitational term, together with the following perturbations:","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"third-body perturbations\nspherical harmonics\nsolar radiation pressure (todo)\ndrag (todo)","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"dotboldsymbolx(t) = \nbeginbmatrix\n    dotboldsymbolr(t)  dotboldsymbolv(t)\nendbmatrix = \nbeginbmatrix\n    boldsymbolv(t)\n     -dfracmu boldsymbolr(t) _2^3boldsymbolr(t)\nendbmatrix\n+\nsum_i \nbeginbmatrix\n    boldsymbol0_3 times 1 \n     boldsymbola_mathrm3bdi(t)\nendbmatrix\n+ \nbeginbmatrix\n    boldsymbol0_3 times 1\n     boldsymbola_mathrmSHn_max(t)\nendbmatrix\n+ \nbeginbmatrix\n    boldsymbol0_3 times 1\n     boldsymbola_mathrmSRP(t)\nendbmatrix","category":"page"},{"location":"overview.html#Third-body-perturbation","page":"Overview","title":"Third-body perturbation","text":"","category":"section"},{"location":"overview.html","page":"Overview","title":"Overview","text":"The third-body perturbation due to body i, boldsymbola_mathrm3bdi, is given by","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"boldsymbola_mathrm3bdi(t)\n= -mu_i left(\n    dfracboldsymbolr(t) - boldsymbolr_i(t) boldsymbolr(t) - boldsymbolr_i(t) _2^3\n    +\n    dfracboldsymbolr_i(t) boldsymbolr_i(t) _2^3\nright)","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"where boldsymbolr_i is the position vector of the perturbing body. In HEFM.jl, this term is implemented using Battin's F(q) function:","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"boldsymbola_mathrm3bdi(t) =\n-dfracmu_i boldsymbolr(t) - boldsymbolr_i(t) _2^3 (boldsymbolr(t) + F(q_i)boldsymbolr_i(t))","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"where F(q_i) is given by","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"F(q_i) = q_i left( dfrac3 + 3q_i + q_i^21 + (sqrt1 + q_i)^3 right)\nquad\nq_i = dfracboldsymbolr(t)^T (boldsymbolr(t) - 2boldsymbolr_i(t))boldsymbolr_i(t)^T boldsymbolr_i(t)","category":"page"},{"location":"overview.html#Spherical-Harmonics","page":"Overview","title":"Spherical Harmonics","text":"","category":"section"},{"location":"overview.html","page":"Overview","title":"Overview","text":"The spherical harmonics perturbation boldsymbola_mathrmSHn_max is given by","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"boldsymbola_mathrmSHn_max = \nsum_n=2^n_max sum_m=0^n boldsymbola_mathrmSHnm","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"where boldsymbola_mathrmSHnm is given by","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"boldsymbola_mathrmSHnm = \nbeginbmatrix\n    ddotx_n m  ddoty_n m  ddotz_n m\nendbmatrix","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"where","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"beginaligned\n ddotx_n m =\nbegincases\n    fracG MR_oplus^2 cdotleft-C_n 0 V_n+11right  m = 0 10em\n    fracG MR_oplus^2 cdot frac12 cdotleftleft(-C_n m V_n+1 m+1-S_n m W_n+1 m+1right) + frac(n-m+2)(n-m) cdotleft(+C_n m V_n+1 m-1+S_n m W_n+1 m-1right)right  m  0\nendcases\n25em\n ddoty_n m = \nbegincases\n    fracG MR_oplus^2 cdotleft-C_n 0 W_n+11right  m = 0 10em\n    fracG MR_oplus^2 cdot frac12 cdotleftleft(-C_n m cdot W_n+1 m+1+S_n m cdot V_n+1 m+1right) + frac(n-m+2)(n-m) cdotleft(-C_n m W_n+1 m-1+S_n m V_n+1 m-1right)right  m  0\nendcases\n25em\n ddotz_n m = fracG MR_oplus^2 cdotleft(n-m+1) cdotleft(-C_n m V_n+1 m-S_n m W_n+1 mright)right\nendaligned","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"and ","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"V_n m=left(fracR_oplusrright)^n+1 cdot P_n m(sin phi) cdot cos m lambda \nquad\nW_n m=left(fracR_oplusrright)^n+1 cdot P_n m(sin phi) cdot sin m lambda","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"(c.f. Montenbruck & Gill Chapter 3.2)","category":"page"},{"location":"overview.html#Solar-Radiation-Pressure","page":"Overview","title":"Solar Radiation Pressure","text":"","category":"section"},{"location":"overview.html#Cannonball-model","page":"Overview","title":"Cannonball model","text":"","category":"section"},{"location":"overview.html","page":"Overview","title":"Overview","text":"The cannonball model SRP acceleration is given by","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"boldsymbola_mathrmSRP(t) = \nP_odot left(fracmathrmAU boldsymbolr_odot _2right)^2 C_r fracAm dfracboldsymbolr_odot boldsymbolr_odot _2","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"where mathrmAU is the astronomical unit, P_odot is the ratiation pressure at 1mathrmAU, C_r is the radiation pressure coefficient, Am is the area-to-mass ratio, and boldsymbolr_odot is the Sun-to-spacecraft position vector. In HighFidelityEphemerisModel, the above is computed in canonical scales as","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"boldsymbola_mathrmSRP(t) = k_mathrmSRP dfracboldsymbolr_odot boldsymbolr_odot _2^3","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"where k_mathrmSRP","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"k_mathrmSRP = \nP_odot left(fracmathrmAUmathrmDUright)^2 C_r fracAm10^3  dfracmathrmTU^2mathrmDU","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"is pre-computed and stored.","category":"page"},{"location":"overview.html#List-of-equations-of-motion-in-HighFidelityEphemerisModel.jl","page":"Overview","title":"List of equations of motion in HighFidelityEphemerisModel.jl","text":"","category":"section"},{"location":"overview.html","page":"Overview","title":"Overview","text":"The table below summarizes the equations of motion. Note: ","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"Nbody: central gravity term + third-body perturbations (boldsymbola_mathrm3bdi)\nNbodySH: central gravity term + third-body perturbations + spherical harmonics perturbations up to nmax degree (boldsymbola_mathrmSHn_max)\nThe STM is integrated with the Jacobian, which is computed either analytically (using symbolic derivative) or via ForwardDiff (functions containing _fd)","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"eom eom + STM (analytical) eom + STM (ForwardDiff) EnsembleThreads compatibility\neom_Nbody_SPICE! eom_stm_Nbody_SPICE! eom_stm_Nbody_SPICE_fd! no\neom_Nbody_Interp! eom_stm_Nbody_Interp! eom_stm_Nbody_Interp_fd! yes\neom_NbodySH_SPICE!  eom_stm_NbodySH_SPICE_fd! no\neom_NbodySH_Interp!  eom_stm_NbodySH_Interp_fd! yes","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"note: Note\nIn order to use Julia's dual numbers, make sure to use a function that does not contain SPICE calls (i.e. use ones with _interp in the name); this is enabled by interpolating ahead of time ephemerides/transformation matrices.","category":"page"},{"location":"overview.html","page":"Overview","title":"Overview","text":"warning: Warning\nThe accuracy of interpolated equations of motion (with _interp in the name) depends on the interpolation_time_step; if high-accuracy integration is required, it is advised to directly use the equations of motion that internally call SPICE (i.e. with _SPICE in the name)","category":"page"},{"location":"index.html#HighFidelityEphemerisModel.jl:-High-Fidelity-Ephemeris-Model-for-Astrodynamics","page":"Home","title":"HighFidelityEphemerisModel.jl: High-Fidelity Ephemeris Model for Astrodynamics","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"HighFidelityEphemerisModel.jl is a minimal implementation of high-fidelity ephemeris model dynamics compatible with the OrdinaryDiffEq.jl ecosystem (i.e. its solvers, parallelism, etc.).","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"What HighFidelityEphemerisModel.jl contains:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"full-ephemeris equations of motion relevant for astrodynamics\ncallback conditions for common astrodynamics events (e.g. detection of osculating true anomaly)\nephemeris interpolation, to define equations of motion compatible with EnsembleThreads & automatic differentiation, e.g. ForwardDiff","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"What HighFidelityEphemerisModel.jl is not:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"not an integrator, i.e. there are no integration schemes (e.g. Runge-Kutta algorithms, step-correction, event detection features, etc.) impemented (at least for now)","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"We strive for minimal dependencies (listed in Project.toml), consisting of: Dierckx, ForwardDiff, LinearAlgebra, OrdinaryDiffEq, SPICE, Symbolics.","category":"page"},{"location":"index.html#Install","page":"Home","title":"Install","text":"","category":"section"},{"location":"index.html#From-the-Registry","page":"Home","title":"From the Registry","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"] add HighFidelityEphemerisModel","category":"page"},{"location":"index.html#Checkout-the-repo","page":"Home","title":"Checkout the repo","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"git clone this repositiory\nIn your project directory, add:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"pkg> dev ./path/to/HighFidelityEphemerisModel.jl","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"To run tests, cd to the root of this repository, then","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"(@v1.10) pkg> activate .\n(HighFidelityEphemerisModel) pkg> test","category":"page"}]
}
